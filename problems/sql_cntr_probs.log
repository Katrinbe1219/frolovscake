INFO:aiogram:Bot: Frolov's Cake [@FrolovsCakeBot]
WARNING:aiogram:Updates were skipped successfully.
INFO:root:database was succefully connected
INFO:aiogram.dispatcher.dispatcher:Start polling.
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-16' coro=<Dispatcher._process_polling_updates() done, defined at C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py:407> exception=TypeError("'NoneType' object is not subscriptable")>
Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 415, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 235, in process_updates
    return await asyncio.gather(*tasks)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 256, in process_update
    return await self.message_handlers.notify(update.message)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "d:\работа\study tel-bot\frolov`s cake\main.py", line 280, in look_my_orders
    first_name = get_first_name_order(user_id)
  File "d:\работа\study tel-bot\frolov`s cake\controllers\sql_controller.py", line 243, in get_first_name_order
    return name['first_name']
TypeError: 'NoneType' object is not subscriptable
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-91' coro=<Dispatcher._process_polling_updates() done, defined at C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py:407> exception=IntegrityError(1048, "Column 'telegram_id' cannot be null")>
Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 415, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 235, in process_updates
    return await asyncio.gather(*tasks)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 256, in process_update
    return await self.message_handlers.notify(update.message)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "d:\работа\study tel-bot\frolov`s cake\main.py", line 247, in change_ratification
    await fill_customer(data['first_name'],data['last_name'], data['email'], data['phone'], msg.from_user.id)
  File "d:\работа\study tel-bot\frolov`s cake\controllers\sql_controller.py", line 209, in fill_customer
    cur.execute(f"""INSERT INTO frolovscake.customers (first_name, last_name,email, phone_num, telegram_id, add_time) VALUES
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\cursors.py", line 148, in execute
    result = self._query(query)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\cursors.py", line 310, in _query
    conn.query(q)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 775, in _read_query_result
    result.read()
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'telegram_id' cannot be null")
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-99' coro=<Dispatcher._process_polling_updates() done, defined at C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py:407> exception=IntegrityError(1048, "Column 'telegram_id' cannot be null")>
Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 415, in _process_polling_updates
    for responses in itertools.chain.from_iterable(await self.process_updates(updates, fast)):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 235, in process_updates
    return await asyncio.gather(*tasks)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 256, in process_update
    return await self.message_handlers.notify(update.message)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\handler.py", line 117, in notify
    response = await handler_obj.handler(*args, **partial_data)
  File "d:\работа\study tel-bot\frolov`s cake\main.py", line 247, in change_ratification
    await fill_customer(data['first_name'],data['last_name'], data['email'], data['phone'], msg.from_user.id)
  File "d:\работа\study tel-bot\frolov`s cake\controllers\sql_controller.py", line 209, in fill_customer
    cur.execute(f"""INSERT INTO frolovscake.customers (first_name, last_name,email, phone_num, telegram_id, add_time) VALUES
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\cursors.py", line 148, in execute
    result = self._query(query)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\cursors.py", line 310, in _query
    conn.query(q)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 775, in _read_query_result
    result.read()
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\User\miniconda3\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'telegram_id' cannot be null")
ERROR:aiogram.dispatcher.dispatcher:Cause exception while getting updates.
Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 381, in start_polling
    updates = await self.bot.get_updates(
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\bot.py", line 110, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\base.py", line 236, in request
    return await api.make_request(await self.get_session(), self.server, self.__token, method, data, files,
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\api.py", line 139, in make_request
    async with session.post(url, data=req, **kwargs) as response:
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 1141, in __aenter__
    self._resp = await self._coro
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 560, in _request
    await resp.start(conn)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client_reqrep.py", line 894, in start
    with self._timer:
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\helpers.py", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
ERROR:aiogram.dispatcher.dispatcher:Cause exception while getting updates.
Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 1152, in _create_direct_connection
    hosts = await asyncio.shield(host_resolved)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 874, in _resolve_host
    addrs = await self._resolver.resolve(host, port, family=self._family)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\resolver.py", line 33, in resolve
    infos = await self._loop.getaddrinfo(
  File "C:\Users\User\miniconda3\lib\asyncio\base_events.py", line 863, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\User\miniconda3\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\User\miniconda3\lib\socket.py", line 955, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\api.py", line 139, in make_request
    async with session.post(url, data=req, **kwargs) as response:
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 1141, in __aenter__
    self._resp = await self._coro
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 536, in _request
    conn = await self._connector.connect(
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 540, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 901, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 1166, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [getaddrinfo failed]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 381, in start_polling
    updates = await self.bot.get_updates(
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\bot.py", line 110, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\base.py", line 236, in request
    return await api.make_request(await self.get_session(), self.server, self.__token, method, data, files,
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\api.py", line 142, in make_request
    raise exceptions.NetworkError(f"aiohttp client throws an error: {e.__class__.__name__}: {e}")
aiogram.utils.exceptions.NetworkError: Aiohttp client throws an error: ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [getaddrinfo failed]
ERROR:aiogram.dispatcher.dispatcher:Cause exception while getting updates.
Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 1152, in _create_direct_connection
    hosts = await asyncio.shield(host_resolved)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 874, in _resolve_host
    addrs = await self._resolver.resolve(host, port, family=self._family)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\resolver.py", line 33, in resolve
    infos = await self._loop.getaddrinfo(
  File "C:\Users\User\miniconda3\lib\asyncio\base_events.py", line 863, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\User\miniconda3\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\User\miniconda3\lib\socket.py", line 955, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\api.py", line 139, in make_request
    async with session.post(url, data=req, **kwargs) as response:
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 1141, in __aenter__
    self._resp = await self._coro
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 536, in _request
    conn = await self._connector.connect(
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 540, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 901, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\connector.py", line 1166, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [getaddrinfo failed]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 381, in start_polling
    updates = await self.bot.get_updates(
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\bot.py", line 110, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\base.py", line 236, in request
    return await api.make_request(await self.get_session(), self.server, self.__token, method, data, files,
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\api.py", line 142, in make_request
    raise exceptions.NetworkError(f"aiohttp client throws an error: {e.__class__.__name__}: {e}")
aiogram.utils.exceptions.NetworkError: Aiohttp client throws an error: ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [getaddrinfo failed]
ERROR:aiogram.dispatcher.dispatcher:Cause exception while getting updates.
Traceback (most recent call last):
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\dispatcher\dispatcher.py", line 381, in start_polling
    updates = await self.bot.get_updates(
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\bot.py", line 110, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\base.py", line 236, in request
    return await api.make_request(await self.get_session(), self.server, self.__token, method, data, files,
  File "C:\Users\User\miniconda3\lib\site-packages\aiogram\bot\api.py", line 139, in make_request
    async with session.post(url, data=req, **kwargs) as response:
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 1141, in __aenter__
    self._resp = await self._coro
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client.py", line 560, in _request
    await resp.start(conn)
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\client_reqrep.py", line 894, in start
    with self._timer:
  File "C:\Users\User\miniconda3\lib\site-packages\aiohttp\helpers.py", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
